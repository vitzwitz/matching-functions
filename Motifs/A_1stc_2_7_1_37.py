'''
FUNC:A_1stc_2_7_1_37
PDB:1stc
EC:2.7.1.37
RESI:asp,lys,thr
LOCI:e-166,168,201;
'''
import motifFunctions as cmd
LYS_ASP = { 
	'distances':
		[[9.1, 8.94, 8.33, 9.69, 6.84, 7.16, 8.23, 9.2], [8.47, 8.06, 7.49, 8.65, 6.34, 6.92, 7.88, 9.08], [8.93, 8.25, 7.46, 8.8, 7.28, 7.75, 8.41, 9.65], [8.22, 7.3, 6.51, 7.68, 7.03, 7.57, 7.98, 9.34], [9.33, 8.23, 7.48, 8.4, 8.31, 8.93, 9.26, 10.65], [9.66, 9.68, 9.58, 10.11, 6.95, 7.75, 9.17, 10.14], [10.08, 10.11, 9.84, 10.68, 7.39, 8.0, 9.39, 10.29], [9.31, 9.41, 9.02, 10.16, 6.75, 7.09, 8.4, 9.22], [8.2, 8.52, 8.29, 9.3, 5.58, 5.87, 7.29, 8.03]],
	'comparisons':
		[[('CB', 'LYS', 'CB', 'ASP', 9.1), ('CB', 'LYS', 'CG', 'ASP', 8.94), ('CB', 'LYS', 'OD1', 'ASP', 8.33), ('CB', 'LYS', 'OD2', 'ASP', 9.69), ('CB', 'LYS', 'O', 'ASP', 6.84), ('CB', 'LYS', 'C', 'ASP', 7.16), ('CB', 'LYS', 'CA', 'ASP', 8.23), ('CB', 'LYS', 'N', 'ASP', 9.2)], [('CG', 'LYS', 'CB', 'ASP', 8.47), ('CG', 'LYS', 'CG', 'ASP', 8.06), ('CG', 'LYS', 'OD1', 'ASP', 7.49), ('CG', 'LYS', 'OD2', 'ASP', 8.65), ('CG', 'LYS', 'O', 'ASP', 6.34), ('CG', 'LYS', 'C', 'ASP', 6.92), ('CG', 'LYS', 'CA', 'ASP', 7.88), ('CG', 'LYS', 'N', 'ASP', 9.08)], [('CD', 'LYS', 'CB', 'ASP', 8.93), ('CD', 'LYS', 'CG', 'ASP', 8.25), ('CD', 'LYS', 'OD1', 'ASP', 7.46), ('CD', 'LYS', 'OD2', 'ASP', 8.8), ('CD', 'LYS', 'O', 'ASP', 7.28), ('CD', 'LYS', 'C', 'ASP', 7.75), ('CD', 'LYS', 'CA', 'ASP', 8.41), ('CD', 'LYS', 'N', 'ASP', 9.65)], [('CE', 'LYS', 'CB', 'ASP', 8.22), ('CE', 'LYS', 'CG', 'ASP', 7.3), ('CE', 'LYS', 'OD1', 'ASP', 6.51), ('CE', 'LYS', 'OD2', 'ASP', 7.68), ('CE', 'LYS', 'O', 'ASP', 7.03), ('CE', 'LYS', 'C', 'ASP', 7.57), ('CE', 'LYS', 'CA', 'ASP', 7.98), ('CE', 'LYS', 'N', 'ASP', 9.34)], [('NZ', 'LYS', 'CB', 'ASP', 9.33), ('NZ', 'LYS', 'CG', 'ASP', 8.23), ('NZ', 'LYS', 'OD1', 'ASP', 7.48), ('NZ', 'LYS', 'OD2', 'ASP', 8.4), ('NZ', 'LYS', 'O', 'ASP', 8.31), ('NZ', 'LYS', 'C', 'ASP', 8.93), ('NZ', 'LYS', 'CA', 'ASP', 9.26), ('NZ', 'LYS', 'N', 'ASP', 10.65)], [('O', 'LYS', 'CB', 'ASP', 9.66), ('O', 'LYS', 'CG', 'ASP', 9.68), ('O', 'LYS', 'OD1', 'ASP', 9.58), ('O', 'LYS', 'OD2', 'ASP', 10.11), ('O', 'LYS', 'O', 'ASP', 6.95), ('O', 'LYS', 'C', 'ASP', 7.75), ('O', 'LYS', 'CA', 'ASP', 9.17), ('O', 'LYS', 'N', 'ASP', 10.14)], [('C', 'LYS', 'CB', 'ASP', 10.08), ('C', 'LYS', 'CG', 'ASP', 10.11), ('C', 'LYS', 'OD1', 'ASP', 9.84), ('C', 'LYS', 'OD2', 'ASP', 10.68), ('C', 'LYS', 'O', 'ASP', 7.39), ('C', 'LYS', 'C', 'ASP', 8.0), ('C', 'LYS', 'CA', 'ASP', 9.39), ('C', 'LYS', 'N', 'ASP', 10.29)], [('CA', 'LYS', 'CB', 'ASP', 9.31), ('CA', 'LYS', 'CG', 'ASP', 9.41), ('CA', 'LYS', 'OD1', 'ASP', 9.02), ('CA', 'LYS', 'OD2', 'ASP', 10.16), ('CA', 'LYS', 'O', 'ASP', 6.75), ('CA', 'LYS', 'C', 'ASP', 7.09), ('CA', 'LYS', 'CA', 'ASP', 8.4), ('CA', 'LYS', 'N', 'ASP', 9.22)], [('N', 'LYS', 'CB', 'ASP', 8.2), ('N', 'LYS', 'CG', 'ASP', 8.52), ('N', 'LYS', 'OD1', 'ASP', 8.29), ('N', 'LYS', 'OD2', 'ASP', 9.3), ('N', 'LYS', 'O', 'ASP', 5.58), ('N', 'LYS', 'C', 'ASP', 5.87), ('N', 'LYS', 'CA', 'ASP', 7.29), ('N', 'LYS', 'N', 'ASP', 8.03)]]}
LYS_THR = { 
	'distances':
		[[7.28, 7.2, 7.6, 8.95, 9.26, 8.66, 8.84], [7.17, 6.68, 7.59, 9.37, 9.45, 8.57, 8.72], [6.07, 5.45, 6.35, 8.65, 8.51, 7.54, 7.9], [6.2, 5.13, 6.74, 9.03, 8.71, 7.48, 7.67], [6.75, 5.55, 6.99, 9.77, 9.26, 7.99, 8.39], [10.34, 9.94, 10.69, 12.16, 12.45, 11.71, 11.73], [9.78, 9.57, 10.01, 11.41, 11.77, 11.17, 11.29], [8.7, 8.66, 9.07, 10.07, 10.51, 10.0, 10.04], [9.09, 8.96, 9.73, 10.34, 10.82, 10.24, 10.02]],
	'comparisons':
		[[('CB', 'LYS', 'CB', 'THR', 7.28), ('CB', 'LYS', 'OG1', 'THR', 7.2), ('CB', 'LYS', 'CG2', 'THR', 7.6), ('CB', 'LYS', 'O', 'THR', 8.95), ('CB', 'LYS', 'C', 'THR', 9.26), ('CB', 'LYS', 'CA', 'THR', 8.66), ('CB', 'LYS', 'N', 'THR', 8.84)], [('CG', 'LYS', 'CB', 'THR', 7.17), ('CG', 'LYS', 'OG1', 'THR', 6.68), ('CG', 'LYS', 'CG2', 'THR', 7.59), ('CG', 'LYS', 'O', 'THR', 9.37), ('CG', 'LYS', 'C', 'THR', 9.45), ('CG', 'LYS', 'CA', 'THR', 8.57), ('CG', 'LYS', 'N', 'THR', 8.72)], [('CD', 'LYS', 'CB', 'THR', 6.07), ('CD', 'LYS', 'OG1', 'THR', 5.45), ('CD', 'LYS', 'CG2', 'THR', 6.35), ('CD', 'LYS', 'O', 'THR', 8.65), ('CD', 'LYS', 'C', 'THR', 8.51), ('CD', 'LYS', 'CA', 'THR', 7.54), ('CD', 'LYS', 'N', 'THR', 7.9)], [('CE', 'LYS', 'CB', 'THR', 6.2), ('CE', 'LYS', 'OG1', 'THR', 5.13), ('CE', 'LYS', 'CG2', 'THR', 6.74), ('CE', 'LYS', 'O', 'THR', 9.03), ('CE', 'LYS', 'C', 'THR', 8.71), ('CE', 'LYS', 'CA', 'THR', 7.48), ('CE', 'LYS', 'N', 'THR', 7.67)], [('NZ', 'LYS', 'CB', 'THR', 6.75), ('NZ', 'LYS', 'OG1', 'THR', 5.55), ('NZ', 'LYS', 'CG2', 'THR', 6.99), ('NZ', 'LYS', 'O', 'THR', 9.77), ('NZ', 'LYS', 'C', 'THR', 9.26), ('NZ', 'LYS', 'CA', 'THR', 7.99), ('NZ', 'LYS', 'N', 'THR', 8.39)], [('O', 'LYS', 'CB', 'THR', 10.34), ('O', 'LYS', 'OG1', 'THR', 9.94), ('O', 'LYS', 'CG2', 'THR', 10.69), ('O', 'LYS', 'O', 'THR', 12.16), ('O', 'LYS', 'C', 'THR', 12.45), ('O', 'LYS', 'CA', 'THR', 11.71), ('O', 'LYS', 'N', 'THR', 11.73)], [('C', 'LYS', 'CB', 'THR', 9.78), ('C', 'LYS', 'OG1', 'THR', 9.57), ('C', 'LYS', 'CG2', 'THR', 10.01), ('C', 'LYS', 'O', 'THR', 11.41), ('C', 'LYS', 'C', 'THR', 11.77), ('C', 'LYS', 'CA', 'THR', 11.17), ('C', 'LYS', 'N', 'THR', 11.29)], [('CA', 'LYS', 'CB', 'THR', 8.7), ('CA', 'LYS', 'OG1', 'THR', 8.66), ('CA', 'LYS', 'CG2', 'THR', 9.07), ('CA', 'LYS', 'O', 'THR', 10.07), ('CA', 'LYS', 'C', 'THR', 10.51), ('CA', 'LYS', 'CA', 'THR', 10.0), ('CA', 'LYS', 'N', 'THR', 10.04)], [('N', 'LYS', 'CB', 'THR', 9.09), ('N', 'LYS', 'OG1', 'THR', 8.96), ('N', 'LYS', 'CG2', 'THR', 9.73), ('N', 'LYS', 'O', 'THR', 10.34), ('N', 'LYS', 'C', 'THR', 10.82), ('N', 'LYS', 'CA', 'THR', 10.24), ('N', 'LYS', 'N', 'THR', 10.02)]]}
THR_ASP = { 
	'distances':
		[[9.75, 9.07, 7.85, 9.89, 9.25, 9.06, 8.97, 9.83], [9.07, 8.18, 6.99, 8.85, 8.67, 8.65, 8.53, 9.59], [11.12, 10.41, 9.22, 11.17, 10.38, 10.29, 10.35, 11.23], [11.03, 10.74, 9.58, 11.79, 10.76, 10.18, 9.93, 10.28], [11.13, 10.64, 9.43, 11.59, 11.01, 10.52, 10.19, 10.68], [10.05, 9.41, 8.17, 10.27, 10.03, 9.66, 9.28, 9.96], [9.01, 8.47, 7.26, 9.41, 9.34, 8.83, 8.24, 8.79]],
	'comparisons':
		[[('CB', 'THR', 'CB', 'ASP', 9.75), ('CB', 'THR', 'CG', 'ASP', 9.07), ('CB', 'THR', 'OD1', 'ASP', 7.85), ('CB', 'THR', 'OD2', 'ASP', 9.89), ('CB', 'THR', 'O', 'ASP', 9.25), ('CB', 'THR', 'C', 'ASP', 9.06), ('CB', 'THR', 'CA', 'ASP', 8.97), ('CB', 'THR', 'N', 'ASP', 9.83)], [('OG1', 'THR', 'CB', 'ASP', 9.07), ('OG1', 'THR', 'CG', 'ASP', 8.18), ('OG1', 'THR', 'OD1', 'ASP', 6.99), ('OG1', 'THR', 'OD2', 'ASP', 8.85), ('OG1', 'THR', 'O', 'ASP', 8.67), ('OG1', 'THR', 'C', 'ASP', 8.65), ('OG1', 'THR', 'CA', 'ASP', 8.53), ('OG1', 'THR', 'N', 'ASP', 9.59)], [('CG2', 'THR', 'CB', 'ASP', 11.12), ('CG2', 'THR', 'CG', 'ASP', 10.41), ('CG2', 'THR', 'OD1', 'ASP', 9.22), ('CG2', 'THR', 'OD2', 'ASP', 11.17), ('CG2', 'THR', 'O', 'ASP', 10.38), ('CG2', 'THR', 'C', 'ASP', 10.29), ('CG2', 'THR', 'CA', 'ASP', 10.35), ('CG2', 'THR', 'N', 'ASP', 11.23)], [('O', 'THR', 'CB', 'ASP', 11.03), ('O', 'THR', 'CG', 'ASP', 10.74), ('O', 'THR', 'OD1', 'ASP', 9.58), ('O', 'THR', 'OD2', 'ASP', 11.79), ('O', 'THR', 'O', 'ASP', 10.76), ('O', 'THR', 'C', 'ASP', 10.18), ('O', 'THR', 'CA', 'ASP', 9.93), ('O', 'THR', 'N', 'ASP', 10.28)], [('C', 'THR', 'CB', 'ASP', 11.13), ('C', 'THR', 'CG', 'ASP', 10.64), ('C', 'THR', 'OD1', 'ASP', 9.43), ('C', 'THR', 'OD2', 'ASP', 11.59), ('C', 'THR', 'O', 'ASP', 11.01), ('C', 'THR', 'C', 'ASP', 10.52), ('C', 'THR', 'CA', 'ASP', 10.19), ('C', 'THR', 'N', 'ASP', 10.68)], [('CA', 'THR', 'CB', 'ASP', 10.05), ('CA', 'THR', 'CG', 'ASP', 9.41), ('CA', 'THR', 'OD1', 'ASP', 8.17), ('CA', 'THR', 'OD2', 'ASP', 10.27), ('CA', 'THR', 'O', 'ASP', 10.03), ('CA', 'THR', 'C', 'ASP', 9.66), ('CA', 'THR', 'CA', 'ASP', 9.28), ('CA', 'THR', 'N', 'ASP', 9.96)], [('N', 'THR', 'CB', 'ASP', 9.01), ('N', 'THR', 'CG', 'ASP', 8.47), ('N', 'THR', 'OD1', 'ASP', 7.26), ('N', 'THR', 'OD2', 'ASP', 9.41), ('N', 'THR', 'O', 'ASP', 9.34), ('N', 'THR', 'C', 'ASP', 8.83), ('N', 'THR', 'CA', 'ASP', 8.24), ('N', 'THR', 'N', 'ASP', 8.79)]]}


flag = False
while True:
	match1 , totTime1 = cmd.detect(LYS_ASP, d, 'A_1stc_2_7_1_37')
	if match1 == []:
		 flag = True
		 break
	match2 , totTime2 = cmd.detect(LYS_THR, d, 'A_1stc_2_7_1_37')
	if match2 == []:
		 flag = True
		 break
	match3 , totTime3 = cmd.detect(THR_ASP, d, 'A_1stc_2_7_1_37')
	if match3 == []:
		 flag = True
		 break
	break

if flag == False:
	matches = {
		'LYS_ASP' :  match1,
		'LYS_THR' :  match2,
		'THR_ASP' :  match3}